{"name":"Tictoc","body":"# TicTocTimer\r\n\r\nA high-resolution timer for Windows, OS X, and Linux.\r\n\r\nPerformance timers are useful for profiling and optimizing code, \r\nbut using one typically involves system specific calls.  So, I\r\nwrapped these up and put them behind a simple API.\r\n\r\n## Incorporating into your project\r\n\r\n - Either build and link against the static library.\r\n - Or just copy tictoc.[ch] to your project.\r\n - On linux, you'll need to link against librt.\r\n\r\n## Usage\r\n\r\nSimple example:\r\n\r\n```c\r\n#include \"tictoc.h\"\r\nint main(int argc, char* argv[])\r\n{ \r\n  TicTocTimer clock = tic();\r\n  time_consuming_operation();\r\n  printf(\"Elapsed time %f seconds.\\n\",toc(&clock)); // prints time since last tic()  \r\n  another_time_consuming_operation();\r\n  printf(\"Elapsed time %f seconds.\\n\",toc(&clock)); // prints time since last toc()\r\n}\r\n```\r\n\r\nAn even simpler example:\r\n\r\n```c\r\n#include \"tictoc.h\"\r\nint main(int argc, char* argv[])\r\n{ \r\n  tic();\r\n  printf(\"%f\\n\",toc(0));\r\n}\r\n```\r\n\r\nThe last example uses a global timer.  Using the global timer from different threads \r\nmay produce strange results.\r\n\r\n## Reliability\r\n\r\nI wrote a little test suite to test the precision, but the tests are badly designed; they \r\nprobably don't predict performance.  I left them in the hope that one day they will be\r\nfixed!\r\n\r\nThe test suite runs tests for different resolutions that rely on some\r\nimplementation of `usleep()` to pause for semi-controlled lengths of \r\ntime.  However, this isn't a reliable way to measure the actual \r\nprecision of your system's timer.\r\n\r\nYou'll have to measure that for yourself according to what is appropriate for\r\nyour application.\r\n\r\n## Details\r\n\r\n* On Windows, tictoc uses [QueryPerformanceCounter][1]\r\n* On OS X, tictoc uses [mach_absolute_time][2]\r\n* On Linux, tictoc uses [clock_gettime][3]\r\n\r\n[1]: http://msdn.microsoft.com/en-us/library/windows/desktop/ms644904(v=vs.85).aspx\r\n[2]: https://developer.apple.com/library/mac/#documentation/Darwin/Conceptual/KernelProgramming/services/services.html\r\n[3]: http://www.tin.org/bin/man.cgi?section=3&topic=clock_gettime\r\n\r\n","tagline":"High-resolution timer for Windows, OSX, and Linux","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}